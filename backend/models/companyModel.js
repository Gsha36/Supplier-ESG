import mongoose, { Schema } from "mongoose";
import validator from "validator";

// Define the Company schema
const companySchema = new Schema(
  {
    companyName: {
      type: String,
      required: true,
      unique: true,
      trim: true,
    },
    companyID: {
      type: Schema.Types.ObjectId, // Auto-generated by MongoDB as _id
    },
    address: {
      type: String,
      required: true,
      trim: true,
    },
    officialEmail: {
      type: String,
      required: true,
      trim: true,
      lowercase: true,
      validate: [validator.isEmail, "Please provide a valid email"],
    },
    officialPhoneNumber: {
      type: String,
      required: true,
      trim: true,
      validate: {
        validator: function (v) {
          // Validator for official phone number to ensure it contains only digits and is 10 digits long
          return /^\d{10}$/.test(v);
        },
        message: (props) =>
          `${props.value} is not a valid official phone number! It should be 10 digits.`,
      },
    },
    suppliers: [
      {
        type: Schema.Types.ObjectId,
        ref: "Supplier",
      },
    ],
    esgReport: {
      type: Schema.Types.ObjectId,
      ref: "ESGReport",
    },
    supplierESGScore: [
      {
        supplierID: {
          type: Schema.Types.ObjectId,
          ref: "Supplier", // Reference to the supplier
        },
        esgScore: {
          type: Number, // Embedded ESG score from Supplier schema
        },
      },
    ],
  },
  {
    timestamps: true,
  }
);

// Middleware to populate supplier ESG score
companySchema.pre(/^find/, async function (next) {
  this.populate({
    path: "suppliers",
    select: "esgScore", // Select only the ESG score field from Supplier schema
  });
  next();
});

export const Company = mongoose.model("Company", companySchema);
